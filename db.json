{
  "folders": [
    {
      "id": "S7pwXr5S",
      "name": "Default",
      "defaultLanguage": "typescript",
      "parentId": null,
      "isOpen": false,
      "isSystem": false,
      "createdAt": 1658994673973,
      "updatedAt": 1658994673973,
      "index": 0
    }
  ],
  "snippets": [
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "休眠",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/** 休眠 */\nexport const sleep = (time: number) => {\n  let id: NodeJS.Timeout;\n  return new Promise((resolve) => {\n    id = setTimeout(() => {\n      clearTimeout(id);\n      resolve(true);\n    }, time * 1000);\n  });\n};",
          "language": "typescript"
        }
      ],
      "id": "L0CzdnJ1",
      "createdAt": 1658994757320,
      "updatedAt": 1658994784420
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "url文件下载",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/** url文件下载 */\nexport const downloadUrlFile = (url: string, fileName: string) => {\n  if (url && fileName) {\n    const link = document.createElement('a');\n    link.style.display = 'none';\n    link.href = url;\n    link.setAttribute('download', fileName);\n\n    document.body.appendChild(link);\n    link.click();\n\n    document.body.removeChild(link); // 下载完成移除元素\n    window.URL.revokeObjectURL(url);\n  }\n};",
          "language": "typescript"
        }
      ],
      "id": "S1EGBBK4",
      "createdAt": 1658995576423,
      "updatedAt": 1658995586268
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "数字变为千分位",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * 数字变为千分位\n * @param price\n * @returns\n * 10000 => 10,000\n * -10000 => -10,000\n * 10000.10 => 10,000.10\n */\nexport const formatPrice = (price: number | string) => {\n  const reg = /\\d{1,3}(?=(\\d{3})+(\\.\\d*)?$)/g;\n  return String(price).replace(reg, '$&,');\n};",
          "language": "typescript"
        }
      ],
      "id": "EWbHlpC4",
      "createdAt": 1658996192812,
      "updatedAt": 1658996207050
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "触发滚动事件",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/** 触发滚动事件 */\nexport const dispatchScrollEvent = () => {\n  const evt = document.createEvent('Event');\n  evt.initEvent('scroll', true, true);\n  window.dispatchEvent(evt);\n};",
          "language": "typescript"
        }
      ],
      "id": "daPXYZm3",
      "createdAt": 1658996275986,
      "updatedAt": 1658996359384
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "下载流文件",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/** 下载流文件 */\nexport const downloadBlobFile = (content: BlobPart, fileName: string) => {\n  const blob = new Blob([content], { type: 'application/octet-stream' });\n  const { msSaveOrOpenBlob } = (window.navigator as any) || {};\n  // IE\n  if (msSaveOrOpenBlob) {\n    msSaveOrOpenBlob(blob, fileName);\n  }\n  // chrome, firefox etc.\n  else {\n    const url = window.URL.createObjectURL(blob);\n    downloadUrlFile(url, fileName);\n  }\n};",
          "language": "typescript"
        }
      ],
      "id": "fSQtlq89",
      "createdAt": 1658996462950,
      "updatedAt": 1658996675270
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "S7pwXr5S",
      "tagsIds": [],
      "description": null,
      "name": "保留几位小数",
      "content": [
        {
          "label": "Fragment 1",
          "value": "export const toFixed = (num: number, s: number) => {\n  const times = 10 ** s;\n  let result = num * times + 0.5;\n  result = parseInt(`${result}`, 10) / times;\n  return `${result}`;\n};",
          "language": "typescript"
        }
      ],
      "id": "cRzX4gms",
      "createdAt": 1658996717800,
      "updatedAt": 1659520887267
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "对象数组深度克隆",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * @description 对象数组深克隆\n * @param {Object} obj 源对象\n * @return object\n */\nexport const deepCopy = <T>(obj: any): T => {\n  let newObj: any;\n  try {\n    newObj = obj.push ? [] : {};\n  } catch (error) {\n    newObj = {};\n  }\n  for (let attr in obj) {\n    if (typeof obj[attr] === \"object\") {\n      newObj[attr] = deepCopy(obj[attr]);\n    } else {\n      newObj[attr] = obj[attr];\n    }\n  }\n  return newObj;\n};",
          "language": "typescript"
        }
      ],
      "id": "PvfUVImP",
      "createdAt": 1663396471450,
      "updatedAt": 1663396501943
    },
    {
      "isDeleted": true,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "测试",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * @description 对象数组深克隆\n * @param {Object} obj 源对象\n * @return object\n */\nexport const deepCopy = <T>(obj: any): T => {\n  let newObj: any;\n  try {\n    newObj = obj.push ? [] : {};\n  } catch (error) {\n    newObj = {};\n  }\n  for (let attr in obj) {\n    if (typeof obj[attr] === \"object\") {\n      newObj[attr] = deepCopy(obj[attr]);\n    } else {\n      newObj[attr] = obj[attr];\n    }\n  }\n  return newObj;\n};",
          "language": "plain_text"
        }
      ],
      "id": "sMPqG5sb",
      "createdAt": 1664344355376,
      "updatedAt": 1664344458250
    },
    {
      "isDeleted": true,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "组件测试",
      "content": [
        {
          "label": "Fragment 1",
          "value": "/**\n * @description 对象数组深克隆\n * @param {Object} obj 源对象\n * @return object\n */\nexport const deepCopy = <T>(obj: any): T => {\n  let newObj: any;\n  try {\n    newObj = obj.push ? [] : {};\n  } catch (error) {\n    newObj = {};\n  }\n  for (let attr in obj) {\n    if (typeof obj[attr] === \"object\") {\n      newObj[attr] = deepCopy(obj[attr]);\n    } else {\n      newObj[attr] = obj[attr];\n    }\n  }\n  return newObj;\n};",
          "language": "plain_text"
        }
      ],
      "id": "KFOKcXVf",
      "createdAt": 1664344413878,
      "updatedAt": 1664344456035
    },
    {
      "isDeleted": false,
      "isFavorites": false,
      "folderId": "",
      "tagsIds": [],
      "description": null,
      "name": "html5模版",
      "content": [
        {
          "label": "Fragment 1",
          "value": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n</head>\n<body>\n    \n</body>\n</html>",
          "language": "plain_text"
        }
      ],
      "id": "TKzdUcRk",
      "createdAt": 1665977090584,
      "updatedAt": 1665977090584
    }
  ],
  "tags": []
}